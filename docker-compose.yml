version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cloudcam_postgres_dev
    environment:
      POSTGRES_DB: cloudcam_dev
      POSTGRES_USER: cloudcam_user
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cloudcam_user -d cloudcam_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cloudcam_network

  redis:
    image: redis:7-alpine
    container_name: cloudcam_redis_dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - cloudcam_network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: cloudcam_api_dev
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://cloudcam_user:dev_password_123@postgres:5432/cloudcam_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret_key_change_in_production
      - PORT=3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cloudcam_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: cloudcam_frontend_dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
      - VITE_SOCKET_URL=http://localhost:3001
    depends_on:
      - api
    networks:
      - cloudcam_network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  cloudcam_network:
    driver: bridge
